Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     block -> LBRACE statement_list RBRACE
Rule 5     statement -> INT ID EQUALS expression SEMICOLON
Rule 6     statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON
Rule 7     statement -> INT ID SEMICOLON
Rule 8     statement -> FLOAT_TYPE ID SEMICOLON
Rule 9     statement -> ID EQUALS expression SEMICOLON
Rule 10    statement -> INT ID LPAREN params RPAREN block
Rule 11    statement -> ID LPAREN args RPAREN SEMICOLON
Rule 12    statement -> RETURN expression SEMICOLON
Rule 13    statement -> IF LPAREN expression RPAREN block
Rule 14    statement -> IF LPAREN expression RPAREN block ELSE block
Rule 15    statement -> WHILE LPAREN expression RPAREN block
Rule 16    statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block
Rule 17    params -> params COMMA param
Rule 18    params -> param
Rule 19    params -> <empty>
Rule 20    param -> INT ID
Rule 21    param -> FLOAT_TYPE ID
Rule 22    args -> args COMMA expression
Rule 23    args -> expression
Rule 24    args -> <empty>
Rule 25    expression -> expression PLUS expression
Rule 26    expression -> expression MINUS expression
Rule 27    expression -> expression TIMES expression
Rule 28    expression -> expression DIVIDE expression
Rule 29    expression -> expression LT expression
Rule 30    expression -> expression GT expression
Rule 31    expression -> expression EQ expression
Rule 32    expression -> LPAREN expression RPAREN
Rule 33    expression -> NUMBER
Rule 34    expression -> ID

Terminals, with rules where they appear

COMMA                : 17 22
DIVIDE               : 28
ELSE                 : 14
EQ                   : 31
EQUALS               : 5 6 9
FLOAT_TYPE           : 6 8 21
FOR                  : 16
GT                   : 30
ID                   : 5 6 7 8 9 10 11 20 21 34
IF                   : 13 14
INT                  : 5 7 10 20
LBRACE               : 4
LPAREN               : 10 11 13 14 15 16 32
LT                   : 29
MINUS                : 26
NUMBER               : 33
PLUS                 : 25
RBRACE               : 4
RETURN               : 12
RPAREN               : 10 11 13 14 15 16 32
SEMICOLON            : 5 6 7 8 9 11 12 16
TIMES                : 27
WHILE                : 15
error                : 

Nonterminals, with rules where they appear

args                 : 11 22
block                : 10 13 14 14 15 16
expression           : 5 6 9 12 13 14 15 16 22 23 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32
param                : 17 18
params               : 10 17
program              : 0
statement            : 2 3 16 16
statement_list       : 1 2 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . INT ID EQUALS expression SEMICOLON
    (6) statement -> . FLOAT_TYPE ID EQUALS expression SEMICOLON
    (7) statement -> . INT ID SEMICOLON
    (8) statement -> . FLOAT_TYPE ID SEMICOLON
    (9) statement -> . ID EQUALS expression SEMICOLON
    (10) statement -> . INT ID LPAREN params RPAREN block
    (11) statement -> . ID LPAREN args RPAREN SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN block

    INT             shift and go to state 4
    FLOAT_TYPE      shift and go to state 6
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . INT ID EQUALS expression SEMICOLON
    (6) statement -> . FLOAT_TYPE ID EQUALS expression SEMICOLON
    (7) statement -> . INT ID SEMICOLON
    (8) statement -> . FLOAT_TYPE ID SEMICOLON
    (9) statement -> . ID EQUALS expression SEMICOLON
    (10) statement -> . INT ID LPAREN params RPAREN block
    (11) statement -> . ID LPAREN args RPAREN SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN block

    $end            reduce using rule 1 (program -> statement_list .)
    INT             shift and go to state 4
    FLOAT_TYPE      shift and go to state 6
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) statement_list -> statement .

    INT             reduce using rule 3 (statement_list -> statement .)
    FLOAT_TYPE      reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> INT . ID EQUALS expression SEMICOLON
    (7) statement -> INT . ID SEMICOLON
    (10) statement -> INT . ID LPAREN params RPAREN block

    ID              shift and go to state 12


state 5

    (9) statement -> ID . EQUALS expression SEMICOLON
    (11) statement -> ID . LPAREN args RPAREN SEMICOLON

    EQUALS          shift and go to state 13
    LPAREN          shift and go to state 14


state 6

    (6) statement -> FLOAT_TYPE . ID EQUALS expression SEMICOLON
    (8) statement -> FLOAT_TYPE . ID SEMICOLON

    ID              shift and go to state 15


state 7

    (12) statement -> RETURN . expression SEMICOLON
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 16

state 8

    (13) statement -> IF . LPAREN expression RPAREN block
    (14) statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 20


state 9

    (15) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 21


state 10

    (16) statement -> FOR . LPAREN statement expression SEMICOLON statement RPAREN block

    LPAREN          shift and go to state 22


state 11

    (2) statement_list -> statement_list statement .

    INT             reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT_TYPE      reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 12

    (5) statement -> INT ID . EQUALS expression SEMICOLON
    (7) statement -> INT ID . SEMICOLON
    (10) statement -> INT ID . LPAREN params RPAREN block

    EQUALS          shift and go to state 23
    SEMICOLON       shift and go to state 24
    LPAREN          shift and go to state 25


state 13

    (9) statement -> ID EQUALS . expression SEMICOLON
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 26

state 14

    (11) statement -> ID LPAREN . args RPAREN SEMICOLON
    (22) args -> . args COMMA expression
    (23) args -> . expression
    (24) args -> .
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    RPAREN          reduce using rule 24 (args -> .)
    COMMA           reduce using rule 24 (args -> .)
    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    args                           shift and go to state 27
    expression                     shift and go to state 28

state 15

    (6) statement -> FLOAT_TYPE ID . EQUALS expression SEMICOLON
    (8) statement -> FLOAT_TYPE ID . SEMICOLON

    EQUALS          shift and go to state 29
    SEMICOLON       shift and go to state 30


state 16

    (12) statement -> RETURN expression . SEMICOLON
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 17

    (32) expression -> LPAREN . expression RPAREN
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 39

state 18

    (33) expression -> NUMBER .

    SEMICOLON       reduce using rule 33 (expression -> NUMBER .)
    PLUS            reduce using rule 33 (expression -> NUMBER .)
    MINUS           reduce using rule 33 (expression -> NUMBER .)
    TIMES           reduce using rule 33 (expression -> NUMBER .)
    DIVIDE          reduce using rule 33 (expression -> NUMBER .)
    LT              reduce using rule 33 (expression -> NUMBER .)
    GT              reduce using rule 33 (expression -> NUMBER .)
    EQ              reduce using rule 33 (expression -> NUMBER .)
    RPAREN          reduce using rule 33 (expression -> NUMBER .)
    COMMA           reduce using rule 33 (expression -> NUMBER .)


state 19

    (34) expression -> ID .

    SEMICOLON       reduce using rule 34 (expression -> ID .)
    PLUS            reduce using rule 34 (expression -> ID .)
    MINUS           reduce using rule 34 (expression -> ID .)
    TIMES           reduce using rule 34 (expression -> ID .)
    DIVIDE          reduce using rule 34 (expression -> ID .)
    LT              reduce using rule 34 (expression -> ID .)
    GT              reduce using rule 34 (expression -> ID .)
    EQ              reduce using rule 34 (expression -> ID .)
    RPAREN          reduce using rule 34 (expression -> ID .)
    COMMA           reduce using rule 34 (expression -> ID .)


state 20

    (13) statement -> IF LPAREN . expression RPAREN block
    (14) statement -> IF LPAREN . expression RPAREN block ELSE block
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 40

state 21

    (15) statement -> WHILE LPAREN . expression RPAREN block
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 41

state 22

    (16) statement -> FOR LPAREN . statement expression SEMICOLON statement RPAREN block
    (5) statement -> . INT ID EQUALS expression SEMICOLON
    (6) statement -> . FLOAT_TYPE ID EQUALS expression SEMICOLON
    (7) statement -> . INT ID SEMICOLON
    (8) statement -> . FLOAT_TYPE ID SEMICOLON
    (9) statement -> . ID EQUALS expression SEMICOLON
    (10) statement -> . INT ID LPAREN params RPAREN block
    (11) statement -> . ID LPAREN args RPAREN SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN block

    INT             shift and go to state 4
    FLOAT_TYPE      shift and go to state 6
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10

    statement                      shift and go to state 42

state 23

    (5) statement -> INT ID EQUALS . expression SEMICOLON
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 43

state 24

    (7) statement -> INT ID SEMICOLON .

    INT             reduce using rule 7 (statement -> INT ID SEMICOLON .)
    FLOAT_TYPE      reduce using rule 7 (statement -> INT ID SEMICOLON .)
    ID              reduce using rule 7 (statement -> INT ID SEMICOLON .)
    RETURN          reduce using rule 7 (statement -> INT ID SEMICOLON .)
    IF              reduce using rule 7 (statement -> INT ID SEMICOLON .)
    WHILE           reduce using rule 7 (statement -> INT ID SEMICOLON .)
    FOR             reduce using rule 7 (statement -> INT ID SEMICOLON .)
    $end            reduce using rule 7 (statement -> INT ID SEMICOLON .)
    LPAREN          reduce using rule 7 (statement -> INT ID SEMICOLON .)
    NUMBER          reduce using rule 7 (statement -> INT ID SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> INT ID SEMICOLON .)
    RPAREN          reduce using rule 7 (statement -> INT ID SEMICOLON .)


state 25

    (10) statement -> INT ID LPAREN . params RPAREN block
    (17) params -> . params COMMA param
    (18) params -> . param
    (19) params -> .
    (20) param -> . INT ID
    (21) param -> . FLOAT_TYPE ID

    RPAREN          reduce using rule 19 (params -> .)
    COMMA           reduce using rule 19 (params -> .)
    INT             shift and go to state 44
    FLOAT_TYPE      shift and go to state 47

    params                         shift and go to state 45
    param                          shift and go to state 46

state 26

    (9) statement -> ID EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 27

    (11) statement -> ID LPAREN args . RPAREN SEMICOLON
    (22) args -> args . COMMA expression

    RPAREN          shift and go to state 49
    COMMA           shift and go to state 50


state 28

    (23) args -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    RPAREN          reduce using rule 23 (args -> expression .)
    COMMA           reduce using rule 23 (args -> expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 29

    (6) statement -> FLOAT_TYPE ID EQUALS . expression SEMICOLON
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 51

state 30

    (8) statement -> FLOAT_TYPE ID SEMICOLON .

    INT             reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    FLOAT_TYPE      reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    ID              reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    RETURN          reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    IF              reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    FOR             reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    $end            reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    RBRACE          reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)
    RPAREN          reduce using rule 8 (statement -> FLOAT_TYPE ID SEMICOLON .)


state 31

    (12) statement -> RETURN expression SEMICOLON .

    INT             reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    RPAREN          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)


state 32

    (25) expression -> expression PLUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 52

state 33

    (26) expression -> expression MINUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 53

state 34

    (27) expression -> expression TIMES . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 54

state 35

    (28) expression -> expression DIVIDE . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 55

state 36

    (29) expression -> expression LT . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 56

state 37

    (30) expression -> expression GT . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 57

state 38

    (31) expression -> expression EQ . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 58

state 39

    (32) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 40

    (13) statement -> IF LPAREN expression . RPAREN block
    (14) statement -> IF LPAREN expression . RPAREN block ELSE block
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    RPAREN          shift and go to state 60
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 41

    (15) statement -> WHILE LPAREN expression . RPAREN block
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 42

    (16) statement -> FOR LPAREN statement . expression SEMICOLON statement RPAREN block
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 62

state 43

    (5) statement -> INT ID EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 63
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 44

    (20) param -> INT . ID

    ID              shift and go to state 64


state 45

    (10) statement -> INT ID LPAREN params . RPAREN block
    (17) params -> params . COMMA param

    RPAREN          shift and go to state 65
    COMMA           shift and go to state 66


state 46

    (18) params -> param .

    RPAREN          reduce using rule 18 (params -> param .)
    COMMA           reduce using rule 18 (params -> param .)


state 47

    (21) param -> FLOAT_TYPE . ID

    ID              shift and go to state 67


state 48

    (9) statement -> ID EQUALS expression SEMICOLON .

    INT             reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)
    RPAREN          reduce using rule 9 (statement -> ID EQUALS expression SEMICOLON .)


state 49

    (11) statement -> ID LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 68


state 50

    (22) args -> args COMMA . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LT expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression EQ expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . ID

    LPAREN          shift and go to state 17
    NUMBER          shift and go to state 18
    ID              shift and go to state 19

    expression                     shift and go to state 69

state 51

    (6) statement -> FLOAT_TYPE ID EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 70
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 52

    (25) expression -> expression PLUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 25 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 25 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 25 (expression -> expression PLUS expression .)
    LT              reduce using rule 25 (expression -> expression PLUS expression .)
    GT              reduce using rule 25 (expression -> expression PLUS expression .)
    EQ              reduce using rule 25 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 25 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! TIMES           [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 53

    (26) expression -> expression MINUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 26 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 26 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 26 (expression -> expression MINUS expression .)
    LT              reduce using rule 26 (expression -> expression MINUS expression .)
    GT              reduce using rule 26 (expression -> expression MINUS expression .)
    EQ              reduce using rule 26 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 26 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! TIMES           [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 54

    (27) expression -> expression TIMES expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 27 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 27 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 27 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 27 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 27 (expression -> expression TIMES expression .)
    LT              reduce using rule 27 (expression -> expression TIMES expression .)
    GT              reduce using rule 27 (expression -> expression TIMES expression .)
    EQ              reduce using rule 27 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 27 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 27 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 55

    (28) expression -> expression DIVIDE expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 28 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 28 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 28 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 28 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 28 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 28 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 28 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 28 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 28 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 28 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 56

    (29) expression -> expression LT expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 29 (expression -> expression LT expression .)
    LT              reduce using rule 29 (expression -> expression LT expression .)
    GT              reduce using rule 29 (expression -> expression LT expression .)
    EQ              reduce using rule 29 (expression -> expression LT expression .)
    RPAREN          reduce using rule 29 (expression -> expression LT expression .)
    COMMA           reduce using rule 29 (expression -> expression LT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! PLUS            [ reduce using rule 29 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 57

    (30) expression -> expression GT expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 30 (expression -> expression GT expression .)
    LT              reduce using rule 30 (expression -> expression GT expression .)
    GT              reduce using rule 30 (expression -> expression GT expression .)
    EQ              reduce using rule 30 (expression -> expression GT expression .)
    RPAREN          reduce using rule 30 (expression -> expression GT expression .)
    COMMA           reduce using rule 30 (expression -> expression GT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! PLUS            [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 58

    (31) expression -> expression EQ expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 31 (expression -> expression EQ expression .)
    LT              reduce using rule 31 (expression -> expression EQ expression .)
    GT              reduce using rule 31 (expression -> expression EQ expression .)
    EQ              reduce using rule 31 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 31 (expression -> expression EQ expression .)
    COMMA           reduce using rule 31 (expression -> expression EQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! PLUS            [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]


state 59

    (32) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 32 (expression -> LPAREN expression RPAREN .)


state 60

    (13) statement -> IF LPAREN expression RPAREN . block
    (14) statement -> IF LPAREN expression RPAREN . block ELSE block
    (4) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 72

    block                          shift and go to state 71

state 61

    (15) statement -> WHILE LPAREN expression RPAREN . block
    (4) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 72

    block                          shift and go to state 73

state 62

    (16) statement -> FOR LPAREN statement expression . SEMICOLON statement RPAREN block
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 74
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 63

    (5) statement -> INT ID EQUALS expression SEMICOLON .

    INT             reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)
    RPAREN          reduce using rule 5 (statement -> INT ID EQUALS expression SEMICOLON .)


state 64

    (20) param -> INT ID .

    RPAREN          reduce using rule 20 (param -> INT ID .)
    COMMA           reduce using rule 20 (param -> INT ID .)


state 65

    (10) statement -> INT ID LPAREN params RPAREN . block
    (4) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 72

    block                          shift and go to state 75

state 66

    (17) params -> params COMMA . param
    (20) param -> . INT ID
    (21) param -> . FLOAT_TYPE ID

    INT             shift and go to state 44
    FLOAT_TYPE      shift and go to state 47

    param                          shift and go to state 76

state 67

    (21) param -> FLOAT_TYPE ID .

    RPAREN          reduce using rule 21 (param -> FLOAT_TYPE ID .)
    COMMA           reduce using rule 21 (param -> FLOAT_TYPE ID .)


state 68

    (11) statement -> ID LPAREN args RPAREN SEMICOLON .

    INT             reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    FLOAT_TYPE      reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    ID              reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    LPAREN          reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    NUMBER          reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    RBRACE          reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)
    RPAREN          reduce using rule 11 (statement -> ID LPAREN args RPAREN SEMICOLON .)


state 69

    (22) args -> args COMMA expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LT expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . EQ expression

    RPAREN          reduce using rule 22 (args -> args COMMA expression .)
    COMMA           reduce using rule 22 (args -> args COMMA expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    EQ              shift and go to state 38


state 70

    (6) statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .

    INT             reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)
    RPAREN          reduce using rule 6 (statement -> FLOAT_TYPE ID EQUALS expression SEMICOLON .)


state 71

    (13) statement -> IF LPAREN expression RPAREN block .
    (14) statement -> IF LPAREN expression RPAREN block . ELSE block

    INT             reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    FLOAT_TYPE      reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    RPAREN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 77


state 72

    (4) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . INT ID EQUALS expression SEMICOLON
    (6) statement -> . FLOAT_TYPE ID EQUALS expression SEMICOLON
    (7) statement -> . INT ID SEMICOLON
    (8) statement -> . FLOAT_TYPE ID SEMICOLON
    (9) statement -> . ID EQUALS expression SEMICOLON
    (10) statement -> . INT ID LPAREN params RPAREN block
    (11) statement -> . ID LPAREN args RPAREN SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN block

    INT             shift and go to state 4
    FLOAT_TYPE      shift and go to state 6
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10

    statement_list                 shift and go to state 78
    statement                      shift and go to state 3

state 73

    (15) statement -> WHILE LPAREN expression RPAREN block .

    INT             reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    FLOAT_TYPE      reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    RPAREN          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)


state 74

    (16) statement -> FOR LPAREN statement expression SEMICOLON . statement RPAREN block
    (5) statement -> . INT ID EQUALS expression SEMICOLON
    (6) statement -> . FLOAT_TYPE ID EQUALS expression SEMICOLON
    (7) statement -> . INT ID SEMICOLON
    (8) statement -> . FLOAT_TYPE ID SEMICOLON
    (9) statement -> . ID EQUALS expression SEMICOLON
    (10) statement -> . INT ID LPAREN params RPAREN block
    (11) statement -> . ID LPAREN args RPAREN SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN block

    INT             shift and go to state 4
    FLOAT_TYPE      shift and go to state 6
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10

    statement                      shift and go to state 79

state 75

    (10) statement -> INT ID LPAREN params RPAREN block .

    INT             reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    FLOAT_TYPE      reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    ID              reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    RETURN          reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    IF              reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    WHILE           reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    FOR             reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    $end            reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    LPAREN          reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    NUMBER          reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    RBRACE          reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)
    RPAREN          reduce using rule 10 (statement -> INT ID LPAREN params RPAREN block .)


state 76

    (17) params -> params COMMA param .

    RPAREN          reduce using rule 17 (params -> params COMMA param .)
    COMMA           reduce using rule 17 (params -> params COMMA param .)


state 77

    (14) statement -> IF LPAREN expression RPAREN block ELSE . block
    (4) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 72

    block                          shift and go to state 80

state 78

    (4) block -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (5) statement -> . INT ID EQUALS expression SEMICOLON
    (6) statement -> . FLOAT_TYPE ID EQUALS expression SEMICOLON
    (7) statement -> . INT ID SEMICOLON
    (8) statement -> . FLOAT_TYPE ID SEMICOLON
    (9) statement -> . ID EQUALS expression SEMICOLON
    (10) statement -> . INT ID LPAREN params RPAREN block
    (11) statement -> . ID LPAREN args RPAREN SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN block

    RBRACE          shift and go to state 81
    INT             shift and go to state 4
    FLOAT_TYPE      shift and go to state 6
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10

    statement                      shift and go to state 11

state 79

    (16) statement -> FOR LPAREN statement expression SEMICOLON statement . RPAREN block

    RPAREN          shift and go to state 82


state 80

    (14) statement -> IF LPAREN expression RPAREN block ELSE block .

    INT             reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    FLOAT_TYPE      reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RPAREN          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)


state 81

    (4) block -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    FLOAT_TYPE      reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 4 (block -> LBRACE statement_list RBRACE .)
    RPAREN          reduce using rule 4 (block -> LBRACE statement_list RBRACE .)


state 82

    (16) statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN . block
    (4) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 72

    block                          shift and go to state 83

state 83

    (16) statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .

    INT             reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    FLOAT_TYPE      reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    ID              reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    RETURN          reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    IF              reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    WHILE           reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    FOR             reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    $end            reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    LPAREN          reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    NUMBER          reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    RBRACE          reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)
    RPAREN          reduce using rule 16 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN block .)

